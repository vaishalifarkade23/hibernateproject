<hibernate-configuration>
<session-factory>
<!-- Database connection settings -->
<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
<property name="connection.url">jdbc:mysql://localhost:3306/hibernatedemo</property>
<!--
    <property name="connection.url">jdbc:mysql://localhost:3306/hibernate_batch1</property>
-->
<property name="connection.username">root</property>
<property name="connection.password"/>

<!-- JDBC connection pool (use the built-in) -->
<property name="connection.pool_size">1</property>

<!-- SQL dialect -->
<property name="dialect">org.hibernate.dialect.MySQLDialect</property>

<!-- Disable the second-level cache  -->
<property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>

<!-- Echo all executed SQL to stdout -->
<property name="show_sql">true</property>

<!-- Drop the existing tables and create new one -->
<property name="hbm2ddl.auto">update</property>
<!--
 Drop the existing tables and create new one 
        <property name="hbm2ddl.auto">create-drop</property>(It done work exactly same as create property. third Property update will do change schema whenever we want.fourth property validate it just validate the schema according to annotation with class )
-->
<!--
 Mention here all the model classes along with crud application
-->
<!-- <mapping class="com.hibernate.Student"/> -->
<!--
 <mapping class="com.hib.onetoonemap.Student"/><mapping class="com.hib.onetoonemap.Student_Detail"/> 
-->
<mapping class="com.hibernatefirst.Student"/>
<mapping class="com.hibernatefirst.StudentAddress"/>
</session-factory>
</hibernate-configuration>